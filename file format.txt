Compressed Voxel .cvox File Format [2023-02-02]

1. File Structure : RIFF style
All bytes and ints are unsigned.
Ints are stored in little endian byte order.
-------------------------------------------------------------------------------
// format version chunk
Chunk 'CVOX'

// for each model
Chunk 'SIZE'    // denotes the start of a model
Chunk 'CMAP'    // optional, maps colours to cubes
Chunk 'CUBE'    // optional, stores cubes
Chunk 'VMAP'    // optional, maps colours to voxels
Chunk 'XYZ '    // optional, stores voxels

// possible extensions
// Additional chunks can be added for application-specific rendering,
// these should have identifiers different from the above.
// Chunks with unknown identifiers should be skipped.
-------------------------------------------------------------------------------


2. Chunk Structure
-------------------------------------------------------------------------------
# Bytes  | Type       | Value
-------------------------------------------------------------------------------
1 x 4    | char       | chunk id
4        | int        | num bytes of chunk content (N)
N        |            | chunk content
-------------------------------------------------------------------------------

3. Chunk id 'CVOX' : file format version
-------------------------------------------------------------------------------
# Bytes  | Type       | Value
-------------------------------------------------------------------------------
4        | int        | 1
-------------------------------------------------------------------------------

4. Chunk id 'SIZE' : model size and position
-------------------------------------------------------------------------------
# Bytes  | Type       | Value
-------------------------------------------------------------------------------
1        | byte       | size x
1        | byte       | size y
1        | byte       | size z // gravity direction
4        | int        | translation x
4        | int        | translation y
4        | int        | translation z
-------------------------------------------------------------------------------

5. Chunk id 'CMAP' : maps colours to cubes.
For example: if CMAP starts with colour red and amount 3,
then the first 3 cubes in 'CUBE' are red.
-------------------------------------------------------------------------------
# Bytes  | Type       | Value
-------------------------------------------------------------------------------
7 x N    | byte       | (alpha, red, green, blue) : 1 byte for each component
                      | 3 byte int for the amount of cubes with this colour
                      | amount can be 0 to store an unused palette colour.
-------------------------------------------------------------------------------

6. Chunk id 'CUBE' : stores N cubes
-------------------------------------------------------------------------------
# Bytes  | Type       | Value
-------------------------------------------------------------------------------
6 x N    | byte       | (x, y, z) : 1 byte for each low coordinate
                      | (x, y, z) : 1 byte for each high coordinate
-------------------------------------------------------------------------------

7. Chunk id 'VMAP' : maps N colours to voxels.
For example: if VMAP starts with colour red and amount 3,
then the first 3 voxels in 'XYZ ' are red.
-------------------------------------------------------------------------------
# Bytes  | Type       | Value
-------------------------------------------------------------------------------
7 x N    | byte       | (alpha, red, green, blue) : 1 byte for each component
                      | 3 byte int for the amount of cubes with this colour
                      | amount can be 0 to store an unused palette colour.
-------------------------------------------------------------------------------

8. Chunk id 'XYZ ' : stores N voxels
-------------------------------------------------------------------------------
# Bytes  | Type       | Value
-------------------------------------------------------------------------------
3 x N    | byte       | (x, y, z) : 1 byte for each coordinate
-------------------------------------------------------------------------------
